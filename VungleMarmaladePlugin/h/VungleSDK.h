/*
 * (C) 2001-2012 Marmalade. All Rights Reserved.
 *
 * This document is protected by copyright, and contains information
 * proprietary to Marmalade.
 *
 * This file consists of source code released by Marmalade under
 * the terms of the accompanying End User License Agreement (EULA).
 * Please do not use this program/source code before you have read the
 * EULA and have agreed to be bound by its terms.
 */
/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
#ifndef S3E_EXT_VUNGLESDK_H
#define S3E_EXT_VUNGLESDK_H

#include <s3eTypes.h>

enum VungleSDKCallback
{
	VUNGLESDK_CALLBACK_ADPLAYABLECHANGED,
	VUNGLESDK_CALLBACK_ADSTART,
	VUNGLESDK_CALLBACK_ADEND,
	VUNGLESDK_CALLBACK_VIDEOVIEW,
	VUNGLESDK_CALLBACK_LOG,
	VUNGLESDK_CALLBACK_MAX
};

struct VungleSDKPlayOption
{
	bool startMuted;
	bool backButtonImmediatelyEnabled;
	bool incentivized;
	int orientation;
	bool large;
	const char* userTag;
	const char* placement;
	const char* alertTitle;
	const char* alertText;
	const char* alertCloseText;
	const char* alertContinueText;
	const char* key1;
	const char* key2;
	const char* key3;
	const char* key4;
	const char* key5;
	const char* key6;
	const char* key7;
	const char* key8;
};

struct VungleSDKAdViewInfo
{
	bool IsCompletedView;
	int VideoDuration;
	int WatchedDuration;
};
// \cond HIDDEN_DEFINES
S3E_BEGIN_C_DECL
// \endcond

/**
 * Report if the VungleSDK extension is available.
 * @return S3E_TRUE if the VungleSDK extension is available. S3E_FALSE otherwise.
 */
s3eBool VungleSDKAvailable();

/**
 * Registers a callback to be called for an operating system event.
 *
 * The available callback types are listed in @ref VungleSDKCallback.
 * @param cbid ID of the event for which to register.
 * @param fn callback function.
 * @param userData Value to pass to the @e userData parameter of @e NotifyFunc.
 * @return
 *  - @ref S3E_RESULT_SUCCESS if no error occurred.
 *  - @ref S3E_RESULT_ERROR if the operation failed.\n
 *
 * @see VungleSDKUnRegister
 * @note For more information on the system data passed as a parameter to the callback
 * registered using this function, see the @ref VungleSDKCallback enum.
 * @note It is not necessary to define a return value for any registered callback.
 */
s3eResult VungleSDKRegister(VungleSDKCallback cbid, s3eCallback fn, void* userData);

/**
 * Unregister a callback for a given event.
 * @param cbid ID of the callback to unregister.
 * @param fn Callback Function.
 * @return
 * - @ref S3E_RESULT_SUCCESS if no error occurred.
 * - @ref S3E_RESULT_ERROR if the operation failed.\n
 * @see VungleSDKRegister
 */
s3eResult VungleSDKUnRegister(VungleSDKCallback cbid, s3eCallback fn);

s3eResult VungleInit(const char* androidAppId, const char* iOSAppId, const char* windowsAppId);

s3eResult VunglePlayAd();

s3eResult VunglePlayAdWithOptions(struct VungleSDKPlayOption* options);

bool VungleIsAdPlayable();

// \cond HIDDEN_DEFINES
S3E_END_C_DECL
// \endcond

#endif /* !S3E_EXT_VUNGLESDK_H */
